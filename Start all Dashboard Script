# ml-service: launch via cmd.exe so it picks up your .bat wrapper
Start-Backend `
  -Name     'ml-service' `
  -WorkDir  'D:\DASHBOARD\namer-occupancy-backend\ml-service' `
  -ExecPath 'cmd.exe' `
  -ExecArgs @('/c','start-ml-service.bat')




@echo off
cd /d D:\DASHBOARD\namer-occupancy-backend\ml-service
call venv\Scripts\activate.bat
python -m uvicorn app:app --host 0.0.0.0 --port 8000









D:\DASHBOARD\namer-occupancy-backend\ml-service\start-ml-service.bat




@echo off
cd /d D:\DASHBOARD\namer-occupancy-backend\ml-service
call venv\Scripts\activate.bat
python -m uvicorn app:app --host 0.0.0.0 --port 8000



# ml-service: launch via cmd.exe so it picks up your .bat wrapper
Start-Backend `
  -Name     'ml-service' `
  -WorkDir  'D:\DASHBOARD\namer-occupancy-backend\ml-service' `
  -ExecPath 'cmd.exe' `
  -ExecArgs @('/c','start-ml-service.bat')




# 1) Save your current PM2 process list
pm2 save

# 2) Generate the Windows startup script
pm2 startup windows

# 3) Install the service that pm2 startup printed out
#    It will look like: "To configure the Startup Script, run: pm2-startup install"
#    So copy+paste that exact 'pm2-startup install' line:
pm2-startup install







.\venv\Scripts\activate
python -m uvicorn app:app --host 0.0.0.0 --port 8000
then Namer ml-services works 

alos add when server restart we need to run cmd again manually it neeed to when server restart after 5 min need to run autostart .

PS C:\Windows\system32> Set-ExecutionPolicy Bypass -Scope Process -Force
PS C:\Windows\system32> cd D:\DASHBOARD
PS D:\DASHBOARD> pm2 stop all
[PM2] Spawning PM2 daemon with pm2_home=C:\Users\S326131HQ\.pm2
[PM2] PM2 Successfully daemonized
[PM2][WARN] No process found
PS D:\DASHBOARD> .\Start-All-Dashboards.ps1


# -------------------------------------------------------------------------------
# Start-All-Dashboards.ps1
# Launch all backends under PM2 and frontends each on its own port.
# Run as Administrator.
# -------------------------------------------------------------------------------

# 1) Ensure pm2 is installed
if (-not (Get-Command pm2 -ErrorAction SilentlyContinue)) {
    Write-Host 'Installing pm2 globally...' -ForegroundColor Yellow
    npm install -g pm2
}

# 2) Helper: start a backend under PM2
function Start-Backend {
    param(
        [string]$Name,       # friendly name under pm2
        [string]$WorkDir,    # cwd for execution
        [string]$ExecPath,   # 'node' or full python.exe
        [string[]]$ExecArgs  # array of arguments
    )
    Write-Host ''
    Write-Host "Starting backend: $Name..." -ForegroundColor Cyan
    pm2 delete $Name -s | Out-Null
    pm2 start $ExecPath `
        --name  $Name `
        --cwd   $WorkDir `
        --     $ExecArgs
}

# 3) Helper: start a frontend on a custom PORT
function Start-Frontend {
    param(
        [string]$Name,     # friendly name
        [string]$WorkDir,  # where package.json lives
        [string]$Port,     # desired PORT env
        [string]$NpmCmd    # e.g. 'npm start' or 'npm run dev:frontend'
    )
    Write-Host ''
    Write-Host "Launching frontend: $Name on port $Port..." -ForegroundColor Green
    Start-Process powershell.exe -ArgumentList @(
        '-NoExit',
        '-ExecutionPolicy','Bypass',
        '-Command',
        "cd `"$WorkDir`"; `$Env:PORT=`"$Port`"; $NpmCmd"
    )
}


# --- BACKENDS via PM2 ----------------------------------------------------------

# APAC
Start-Backend `
  -Name     'apac-backend' `
  -WorkDir  'D:\DASHBOARD\apac-occupancy-backend' `
  -ExecPath 'node' `
  -ExecArgs @('server.js')

# EMEA
Start-Backend `
  -Name     'emea-backend' `
  -WorkDir  'D:\DASHBOARD\emea-occupancy-backend' `
  -ExecPath 'node' `
  -ExecArgs @('server.js')

# LACA: call your Express entry directly
Start-Backend `
  -Name     'laca-backend' `
  -WorkDir  'D:\DASHBOARD\laca-occupancy-backend' `
  -ExecPath 'node' `
  -ExecArgs @('src/server.js')

# NAMER
Start-Backend `
  -Name     'namer-backend' `
  -WorkDir  'D:\DASHBOARD\namer-occupancy-backend' `
  -ExecPath 'node' `
  -ExecArgs @('server.js')

# ml-service: split uvicorn args
Start-Backend `
  -Name     'ml-service' `
  -WorkDir  'D:\DASHBOARD\namer-occupancy-backend\ml-service' `
  -ExecPath 'D:\DASHBOARD\namer-occupancy-backend\ml-service\venv\Scripts\python.exe' `
  -ExecArgs @( 
      '-m', 
      'uvicorn', 
      'app:app', 
      '--host', 
      '0.0.0.0', 
      '--port', 
      '8000' 
  )

# Global: run your index.js directly
Start-Backend `
  -Name     'global-backend' `
  -WorkDir  'D:\DASHBOARD\global-page' `
  -ExecPath 'node' `
  -ExecArgs @('src/index.js')

# Employee Verification
Start-Backend `
  -Name     'employee-backend' `
  -WorkDir  'D:\DASHBOARD\employee-verification' `
  -ExecPath 'node' `
  -ExecArgs @('server.js')


# --- FRONTENDS in new PS windows -----------------------------------------------

Start-Frontend `
  -Name    'apac-frontend' `
  -WorkDir 'D:\DASHBOARD\apac-occupancy-frontend' `
  -Port    '3000' `
  -NpmCmd  'npm start'

Start-Frontend `
  -Name    'emea-frontend' `
  -WorkDir 'D:\DASHBOARD\emea-occupancy-frontend' `
  -Port    '3001' `
  -NpmCmd  'npm start'

Start-Frontend `
  -Name    'namer-frontend' `
  -WorkDir 'D:\DASHBOARD\namer-occupancy-frontend\namer-occupancy-frontend' `
  -Port    '3002' `
  -NpmCmd  'npm start'

Start-Frontend `
  -Name    'laca-frontend' `
  -WorkDir 'D:\DASHBOARD\laca-occupancy-frontend' `
  -Port    '3003' `
  -NpmCmd  'npm start'

Start-Frontend `
  -Name    'employee-frontend' `
  -WorkDir 'D:\DASHBOARD\employee-verification\frontend' `
  -Port    '3004' `
  -NpmCmd  'npm start'

Start-Frontend `
  -Name    'global-frontend' `
  -WorkDir 'D:\DASHBOARD\global-page' `
  -Port    '3005' `
  -NpmCmd  'npm run dev:frontend'


# -------------------------------------------------------------------------------

Write-Host ''
Write-Host 'All services have been launched.' -ForegroundColor White
Write-Host '• Check backend status with pm2 list or pm2 logs <name>' -ForegroundColor Gray
Write-Host '• Frontends are running in their own PS windows on ports 3000-3005.' -ForegroundColor Gray


